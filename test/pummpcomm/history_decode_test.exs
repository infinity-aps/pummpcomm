defmodule Pummpcomm.HistoryTest do
  use ExUnit.Case

  alias Pummpcomm.Crc.Crc16
  alias Pummpcomm.PumpModel

  doctest Pummpcomm.History

  test "It can reconstruct a binary page after decoding it - 1" do
    {:ok, history_page} =
      Base.decode16(

      )

    decoded_events =
      Pummpcomm.History.decode(history_page, elem(PumpModel.model_number("722"), 1)) |> elem(1)

    page_from_decoded_events =
      decoded_events |> Enum.map_join(fn event -> elem(event, 1)[:raw] end)

    page_from_decoded_events =
      page_from_decoded_events <> <<Crc16.crc_16(page_from_decoded_events)::16>>

    assert history_page == page_from_decoded_events
  end

  test "It can reconstruct a binary page after decoding it - 2" do
    {:ok, history_page} =
      Base.decode16(

      )

    decoded_events =
      Pummpcomm.History.decode(history_page, elem(PumpModel.model_number("722"), 1)) |> elem(1)

    page_from_decoded_events =
      decoded_events |> Enum.map_join(fn event -> elem(event, 1)[:raw] end)

    page_from_decoded_events =
      page_from_decoded_events <> <<Crc16.crc_16(page_from_decoded_events)::16>>

    assert history_page == page_from_decoded_events
  end

  test "It can reconstruct a binary page after decoding it - 3" do
    {:ok, history_page} =
      Base.decode16(

      )

    decoded_events =
      Pummpcomm.History.decode(history_page, elem(PumpModel.model_number("722"), 1)) |> elem(1)

    page_from_decoded_events =
      decoded_events |> Enum.map_join(fn event -> elem(event, 1)[:raw] end)

    page_from_decoded_events =
      page_from_decoded_events <> <<Crc16.crc_16(page_from_decoded_events)::16>>

    assert history_page == page_from_decoded_events
  end

  test "It can reconstruct a binary page after decoding it - 4" do
    {:ok, history_page} =
      Base.decode16(

      )

    decoded_events = Pummpcomm.History.decode(history_page, "554") |> elem(1)

    page_from_decoded_events =
      decoded_events |> Enum.map_join(fn event -> elem(event, 1)[:raw] end)

    page_from_decoded_events =
      page_from_decoded_events <> <<Crc16.crc_16(page_from_decoded_events)::16>>

    assert history_page == page_from_decoded_events
  end
end
